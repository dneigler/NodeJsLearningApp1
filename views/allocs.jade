form(action='/signup',method='post')
    label Enter your name:
        input(name='username')
    div(data-role='fieldcontain')
        label(for='savename') Save
        input(type='submit', name='savename', value='Submit Name')

table
  caption Resource Allocations Table
  colgroup
  colgroup(span='2', title='Title')
  thead
    tr
      th(scope="col") Month
      th(scope="col") Name
      th(scope="col") Allocation Percentage
      th(scope="col") Project
      th(scope="col") _id
      th(scope="col") Save
  tfoot
    tr
      td END
  tbody(data-bind="foreach: Rows")
    tr
      td(data-bind="text: new Date(Date.parse(Month())).format('mmm-yy')")
      td
        a(data-bind="attr: {href: '/allocs/' + Name()}, text: Name")
      td
        input(type='text', data-bind="value: AllocationPercentage")
      td(data-bind="text:Project")
      td(data-bind="text: _id")
      td
        input(type='button', onclick='saveUsers();', value='Save Changes')

script(type='text/javascript')
    var socket = io.connect();
      socket.on('news', function (data) {
        console.log(data);
        socket.emit('my other event', { my: 'data' });
      });
      socket.on('auditTrail', function(data) {
        console.log(data);
        var atData = ko.mapping.fromJS(data);
        // update knockout array
        vm.AuditTrailObjects.Rows.push(atData);
      });
      socket.on('Users', function(data) {
        console.log(data);
        // for now just replace
        vm.Rows(data.Rows);

      });
      socket.on('NewUser', function(data) {
        console.log('NewUser received: ');
         console.log(data);
         var obj = ko.mapping.fromJS(data);
         vm.Rows.push(obj);
      });
    var vmData = !{JSON.stringify(allocs)};

    var vm = ko.mapping.fromJS(vmData);

    ko.applyBindings(vm);

    function saveUsers() {

        var jsonData = ko.toJS(vm);
        // alert(jsonData);
        // alert(JSON.stringify(jsonData));
        $.ajax({
          url: '/saveUsers',
          type: 'POST',
          dataType:'JSON',
          data: {workaround: JSON.stringify(jsonData)},
          success: function(response){
          }
        });
    }